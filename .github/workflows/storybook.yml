name: Build and Deploy
on:
  pull_request:
    branches:
      - main
  push:
    paths: [
        'stories/**',
        'src/components/**',
        '.github/workflows/storybook.yml',
        'package.json',
        'webpack.entries.js',
      ] # Trigger the action only when files change in the folders defined here
    branches: ['main']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
permissions:
  contents: write
  pages: write
  id-token: write
# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: false
jobs:
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Enable Corepack
        run: corepack enable
      - name: Install Dependencies
        run: YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install --refresh-lockfile # To allow compatibility with dependency updaters
      - name: Lint with ESLint and stylelint
        run: yarn run lint:check
      - name: Build Storybook
        run: |
          yarn run build
          mv docs-build-temp _site
          cp dist _site -r
      - name: Run tests with Jest üß™
        run: |
          yarn test
      - name: Cache Jest cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules/.cache/jest'
          key: jest-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            jest-${{ runner.os }}-
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: ./dist
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' # only deploy if branch is master
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
